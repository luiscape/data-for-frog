{
    "contents" : "# Creating a source list.\nsource_list <- c('fts', 'rw', 'sw')\n\n# Adding a row to the dataset to make them the same structure.\n# For ReliefWeb.\n# temp <- read.csv('data/rw-value.csv')\n# temp$source <- \"ReliefWeb\"\n# write.csv(temp, 'data/rw-value.csv', row.names = F)\n\n# Creating empty data.frames.\nfinal_dataset <- data.frame()\nfinal_indicator <- data.frame()\nfinal_value <- data.frame()\n\n# Fetching and merging all data.\nfor (i in 1:length(source_list)) { \n    src <- source_list[i]\n    x  <- read.csv(paste0('source-data/', src, '-', 'dataset.csv'))\n    y  <- read.csv(paste0('source-data/', src, '-', 'indicator.csv'))\n    z  <- read.csv(paste0('source-data/', src, '-', 'value.csv'))  \n    \n    if (i == 1) { \n        final_dataset <<- x\n        final_indicator <<- y\n        final_value <<- z\n    }\n    \n    else { \n        final_dataset <<- rbind(final_dataset, x)\n        final_indicator <<- rbind(final_indicator, y)\n        final_value <<- rbind(final_value, z)\n    }\n}\n\nwrite.csv(final_dataset, 'frog-data/dataset.csv', row.names = F)\nwrite.csv(final_indicator, 'frog-data/indicator.csv', row.names = F)\nwrite.csv(final_value, 'frog-data/value.csv', row.names = F)\n\n\n# Storing data in a database.\nlibrary(sqldf)\n\ndb <- dbConnect(SQLite(), dbname=\"frog-data/db.sqlite\")\n\n    dbWriteTable(db, \"dataset\", final_dataset, row.names = FALSE, overwrite = TRUE)\n    dbWriteTable(db, \"indicator\", final_indicator, row.names = FALSE, overwrite = TRUE)\n    dbWriteTable(db, \"value\", final_value, row.names = FALSE, overwrite = TRUE)\n    \n    # for testing purposes\n    # test <- dbReadTable(db, \"value\")\n\ndbDisconnect(db)\n",
    "created" : 1400597175094.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "306540813",
    "id" : "AA5A291",
    "lastKnownWriteTime" : 1400599334,
    "path" : "~/Documents/Programming/data-for-frog/merging.R",
    "project_path" : "merging.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}